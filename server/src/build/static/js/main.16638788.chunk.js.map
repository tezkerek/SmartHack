{"version":3,"sources":["components/Navbar.tsx","components/Footer.tsx","components/SignIn.tsx","components/SignUp.tsx","components/dashComponents/Popup.tsx","components/dashComponents/KeysPopup.tsx","components/dashComponents/StoredPassword.tsx","components/Dashboard.tsx","components/Home.tsx","App.tsx","index.tsx"],"names":["Navbar","page","useState","action","setAction","useEffect","className","to","href","target","Footer","SignIn","setToken","setPass","signinDetails","setSigninDetails","handleChange","e","value","type","name","handleSubmit","a","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","result","status","data","window","location","alert","error","onSubmit","placeholder","onChange","SignUp","signUpDetails","setSignUpDetails","code","console","log","Popup","handleClose","content","onClick","KeysPopup","StoredPassword","website","password","passwordShown","setPasswordShown","readOnly","Dashboard","pass","token","isOpen","setIsOpen","isKeysOpen","setIsKeysOpen","newPassword","setNewPassword","newKey","setNewKey","passwordEntries","setPasswordEntries","keyEntries","setKeyEntries","getEntries","togglePopup","toggleKeysPopup","username","checked","keyHandleChange","passwordsContent","required","defaultValue","keysContent","keyHandleSubmit","Home","setLoggedIn","requestToken","localStorage","getItem","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16638788.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport {Link} from \"react-router-dom\"\n\nfunction Navbar({page}) {\n    const [action, setAction] = useState(\"\")\n    \n    // eslint-disable-next-line\n    useEffect(() => {\n        if (page === \"Sign up\") \n            setAction(\"Sign in\")\n        else if(page === \"Home\")\n            setAction(\"@andreihodo\")\n      });\n\n    return (\n        <div className=\"navbar\">\n            <Link to=\"/\" className=\"a-tag\">\n                <h1 className=\"title\">Lorem ipsum</h1>\n            </Link>\n\n            <div className=\"mini-navbar\">\n                <div className=\"links\">\n                    <Link to=\"/\" className=\"a-tag\">\n                        <p className=\"link\">Home</p>\n                    </Link>\n                    <a href=\"https://twitter.com/andreihodo\" target=\"_blank\"><p className=\"link\">Help</p></a>\n                    <Link to=\"/signup\" className=\"a-tag\">\n                        <p className=\"link\">{page}</p>\n                    </Link>\n                </div>\n\n            </div>\n\n            <div className=\"navbar-action\">\n                <Link to=\"/signin\">\n                    <button className=\"navbar-btn\">{action}</button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar","import React from \"react\"\n\nfunction Footer() {\n    return (\n        <div className=\"footer\">\n            <p>Made with love by Looney Toons.</p>\n        </div>\n    )\n}\n\nexport default Footer","import React, {useState} from \"react\"\n\nfunction SignIn({setToken,setPass}) {\n    const [signinDetails, setSigninDetails] = useState({})\n\n    const handleChange = (e) => {\n        const target = e.target;\n        const value = target.type === 'password' ? target.value : target.value;\n        const name = target.name;\n        setSigninDetails({\n            ...signinDetails,\n            [name]: value\n        })\n    }\n \n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const result = await fetch('/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(signinDetails)\n        }).then((res)=>res.json())\n\n        if(result.status === \"ok\") {\n            setToken(result.data)\n            setPass(signinDetails['password'])\n            window.location.href = \"/dashboard\"; \n        } else {\n            alert(result.error)\n        }\n\n        // Clear input fields\n        setSigninDetails({})\n    }\n\n    return (\n        <div className=\"signin-container\">\n            <h1>Sign in</h1>\n            <p>Sign in and start generating passwords</p>\n            <form className=\"signin-form\" onSubmit={handleSubmit}>\n                <input type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Username\"\n                    className=\"input-username\"\n                    onChange={handleChange}\n                    />\n                <input type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    className=\"input-password\"\n                    onChange={handleChange}\n                />\n\n                <button type=\"submit\" \n                    onSubmit={handleSubmit}\n                    className=\"signin-btn\">\n                        Sign in\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default SignIn","import React, {useState} from \"react\"\n\nfunction SignUp() {\n    const [signUpDetails, setSignUpDetails] = useState({})\n\n    const handleChange = (e) => {\n        const target = e.target;\n        const value = target.type === 'password' ? target.value : target.value;\n        const name = target.name;\n        setSignUpDetails({\n            ...signUpDetails,\n            [name]: value\n        })\n    }\n \n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const result = await fetch('/register', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(signUpDetails)\n        }).then((res)=>res.json())\n\n        if(result.status === \"ok\") {\n            window.location.href = '/signin'\n        } else {\n            if(result.error.code === 11000) {\n                alert(\"Username is already in use!\");\n            } else {\n                alert(\"Eroare!\");\n                console.log(result.error);\n            }\n        }\n        // Clear input fields\n        setSignUpDetails({})\n    }\n\n    return (\n        <div className=\"signup-container\">\n            <h1>Sign up</h1>\n            <p>Create new account</p>\n            <form className=\"signup-form\" onSubmit={handleSubmit}>\n                <input type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Username\"\n                    className=\"input-username\"\n                    onChange={handleChange}\n                    />\n                <input type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    className=\"input-password\"\n                    onChange={handleChange}\n                />\n\n                <button type=\"submit\" \n                    onSubmit={handleSubmit}\n                    className=\"signup-btn\">\n                        Sign up\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default SignUp","import React from \"react\";\n \nconst Popup = ({handleClose, content}) => {\n  return (\n    <div className=\"popup-box\">\n      <div className=\"box\">\n        <span className=\"close-icon\" onClick={handleClose}>x</span>\n        {content}\n      </div>\n    </div>\n  );\n};\n \nexport default Popup;","import React from \"react\";\n \nconst KeysPopup = ({handleClose, content}) => {\n  return (\n    <div className=\"popup-box\">\n      <div className=\"box\">\n        <span className=\"close-icon\" onClick={handleClose}>x</span>\n        {content}\n      </div>\n    </div>\n  );\n};\n \nexport default KeysPopup;","import React, {useState} from \"react\"\n\nfunction StoredPassword({website, password}) {\n    const [passwordShown, setPasswordShown] = useState(false);\n\n    return (\n        <div className=\"stored-password\">\n            <p>{website}</p>\n            <input \n                type={passwordShown ? \"text\" : \"password\"}\n                className=\"stored-password-input\"\n                value={password} \n                readOnly\n            />\n            <button className=\"showhide-btn\"\n                onClick={() => setPasswordShown(!passwordShown)}>\n                    {passwordShown ? \"Hide\" : \"Show\"}\n            </button>\n            <button className=\"delete-btn\">Delete</button>\n        </div>\n    )\n}\n\nexport default StoredPassword","import React, {useState,useEffect} from \"react\"\nimport Popup from \"./dashComponents/Popup\"\nimport KeysPopup from \"./dashComponents/KeysPopup\"\nimport StoredPassword from \"./dashComponents/StoredPassword\"\nimport { BsPlusCircleFill } from 'react-icons/bs';\n\nfunction Dashboard({pass,token}) {\n    const [isOpen, setIsOpen] = useState(false);\n    const [isKeysOpen, setIsKeysOpen] = useState(false);\n    const [newPassword, setNewPassword] = useState({})\n    const [newKey, setNewKey] = useState({})\n    const [passwordEntries,setPasswordEntries] = useState([])\n    const [keyEntries, setKeyEntries] = useState([])\n    useEffect(()=>{\n        console.log('in');\n        const getEntries = async ()=>{\n            const result = await fetch('/user/me', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    \"Authorization\": token\n                },\n            }).then((res)=>res.json())\n            if(result.status === \"error\") {\n                window.location.href = '/'\n            } else {\n                setPasswordEntries(result.data.passwordEntries)\n                setKeyEntries(result.data.keyEntries)\n            }\n        }\n        getEntries()\n    },[])\n    const togglePopup = () => {\n        setIsOpen(!isOpen);\n        setNewPassword({})\n    }\n\n    const toggleKeysPopup = () => {\n        setIsKeysOpen(!isKeysOpen);\n        setNewKey({})\n    }\n\n    const handleSubmit = async (e:React.FormEvent<HTMLButtonElement>) => {\n        e.preventDefault()\n        const result = await fetch('/entries/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body:JSON.stringify({\n                type:'password',\n                token:token,\n                username:newPassword['username'],\n                password:newPassword['password']\n            })\n        }).then((res)=>res.json())\n        if(result.status === \"error\") {\n            alert(result.error)\n        } else {\n            setPasswordEntries(result.data.passwordEntries)\n            setKeyEntries(result.data.keyEntries)\n            console.log('added',passwordEntries,keyEntries);\n        }\n        togglePopup()\n    }\n    const keyHandleSubmit = (e:React.FormEvent<HTMLButtonElement>) => {\n        e.preventDefault()\n    \n        toggleKeysPopup()\n    }\n    const handleChange = (e) => {\n        const target = e.target;\n        const {type, name} = target\n        if (type === \"text\" || type === \"number\" || type === \"password\")\n            setNewPassword({...newPassword, [name]: target.value})\n        else\n            setNewPassword({...newPassword, [name]: [target.checked]})\n        console.log(newPassword);\n    }\n\n    const keyHandleChange = (e) => {\n        const target = e.target;\n        const {type, name} = target\n        if (type === \"text\" || type === \"password\")\n            setNewKey({...newKey, [name]: target.value})\n        else\n            setNewKey({...newKey, [name]: [target.value]})\n    }\n\n    \n\n    const passwordGenerator = (e:React.FormEvent<HTMLButtonElement>)=>{\n        e.preventDefault()\n    }\n    // Content for the popup\n    const passwordsContent = \n    <>\n        <h1 className=\"popup-title\">Add a new password</h1>\n        <form className=\"popup-form\">\n            <label className=\"text-inputs\">\n                Username:\n                <input type=\"text\"\n                       name=\"username\"\n                       value={newPassword[\"username\"]}\n                       onChange={handleChange}\n                       required\n                />\n            </label>\n            <label className=\"text-inputs\">\n                Password:\n                <input type=\"password\"\n                       name=\"password\"\n                       value={newPassword[\"password\"]}\n                       onChange={handleChange}\n                       required\n                />\n            </label>\n            <button\n            type='button'\n            onClick={passwordGenerator}\n            className=\"generate-password\">\n                Generate Password\n            </button>\n            <label className=\"text-inputs\">\n                Length:\n                <input type=\"number\"\n                       name=\"length\"\n                       defaultValue=\"8\"\n                       value={newPassword[\"length\"]}\n                       onChange={handleChange}\n                />\n            </label>\n            <label className=\"checkbox\">\n                Include Symbols:\n                <input\n                    name=\"symbols\"\n                    type=\"checkbox\"\n                    checked={setNewPassword[\"symbols\"]}\n                    onChange={handleChange} \n                />\n            </label>\n            <label className=\"checkbox\">\n                Include Numbers:\n                <input\n                    name=\"numbers\"\n                    type=\"checkbox\"\n                    checked={setNewPassword[\"numbers\"]}\n                    onChange={handleChange} \n                />\n            </label>\n            <label className=\"checkbox\">\n                Include Uppercase Letters:\n                <input\n                    name=\"uppercase\"\n                    type=\"checkbox\"\n                    checked={setNewPassword[\"uppercase\"]}\n                    onChange={handleChange} \n                />\n            </label>\n\n            <button className=\"popup-btn\"\n                    type=\"button\"\n                    onClick={handleSubmit}\n            >\n                Add password\n            </button>\n        </form>\n    </>\n\n    const keysContent = <>\n        <form className=\"popup-form\">\n\n            <button className=\"generate-key\">\n                Generate Key\n            </button>\n\n            <select name=\"select\"\n                    value={newKey[\"select\"]} \n                    onChange={keyHandleChange}\n            >\n                <option value=\"AES\">AES</option>\n                <option value=\"Triple-DES\">Triple DES</option>\n                <option value=\"RSA\">RSA</option>\n                <option value=\"ECC\">ECC</option>\n            </select>\n            \n            <label className=\"key-input\">\n                Key:\n                <input type=\"password\"\n                       name=\"key\"\n                       value={newKey[\"key\"]}\n                       onChange={keyHandleChange}\n                       required\n                />\n            </label>\n\n            <button className=\"popup-btn popup-keys-btn\"\n                    type=\"button\"\n                    onClick={(e)=>{keyHandleSubmit(e)}}\n            >\n                Add key\n            </button>\n        </form>\n    </>\n\n    return (\n        <div className=\"dashboard\">\n            <div className=\"dashboard-buttons\">\n                <button className=\"new-password-btn\"\n                        onClick={togglePopup}>\n                    <BsPlusCircleFill className=\"plus-icon\"/>\n                    New password\n                </button>\n                <button className=\"new-key-btn\"\n                        onClick={toggleKeysPopup}>\n                    <BsPlusCircleFill className=\"plus-icon\"/>\n                    New key\n                </button>\n            </div>\n\n            <div className=\"passwords-container\">\n                <div className=\"passwords\">\n                    <h2>Passwords</h2>\n                    <StoredPassword\n                        website=\"www.youtube.com\"\n                        password=\"adkajflkajfl;\" \n                    />\n                    <StoredPassword\n                        website=\"www.youtube.com\"\n                        password=\"adkajflkajfl;\" \n                    />\n                </div>\n                <div className=\"keys\">\n                    <h2>Keys</h2>\n                    <StoredPassword\n                        website=\"www.facebook.com\"\n                        password=\"adadasas1o00;\" \n                    />\n                </div>\n            </div>\n\n            {isOpen && <Popup\n                    content={passwordsContent}\n                    handleClose={togglePopup}\n                />}\n            {isKeysOpen && <KeysPopup\n                    content={keysContent}\n                    handleClose={toggleKeysPopup}\n                />}\n        </div>\n    )\n}\n\nexport default Dashboard","import React, {useState, useEffect} from \"react\"\nimport {Link} from \"react-router-dom\"\n\nfunction Home() {\n    // eslint-disable-next-line\n    const [loggedIn, setLoggedIn] = useState(false)\n\n    useEffect(() => {\n        // fetch\n        const requestToken = async () => {\n            const result = await fetch('/user/me', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    \"Authorization\": localStorage.getItem(\"token\")\n                },\n            }).then((res)=>res.json())\n\n            if(result.status === \"error\") {\n                setLoggedIn(false);\n            } else {\n                setLoggedIn(true);\n            }\n        }\n        requestToken()\n    }, [])\n\n    return (\n        <div className=\"home\">\n            <div className=\"home-left\">\n                <h1>Save your <br /> passwords here.</h1>\n                <p>Lorem ipsum is a password storage area that has been\n                    tested for security, so you can store your data here\n                    safely without being afraid of it being stolen by others.</p>\n                <Link to=\"/signup\">\n                    <button className=\"home-signup-btn\">Sign up</button>\n                </Link>\n            </div>\n\n            <div className=\"home-right\">\n                <div className=\"demo-container\"></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home","import React,{useState} from 'react';\nimport Navbar from \"./components/Navbar\"\nimport Footer from \"./components/Footer\"\nimport SignIn from \"./components/SignIn\"\nimport SignUp from \"./components/SignUp\"\nimport Dashboard from \"./components/Dashboard\"\nimport Home from \"./components/Home\"\nimport './App.css';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\n\nfunction App() {\n  const [token,setToken] = useState<String>('')\n  const [pass,setPass] = useState<String>('')\n  return (\n    <BrowserRouter>\n      <Navbar page=\"Sign up\"/>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/signup\" element={<SignUp />} />\n        <Route path=\"/signin\" element={<SignIn setToken={setToken} setPass={setPass} />} />\n        <Route path=\"/dashboard\" element={<Dashboard token={token} pass={pass} />} />\n      </Routes>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}